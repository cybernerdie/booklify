"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    posts: [Post!]! @paginate(defaultCount: 10) @orderBy(column: "created_at", direction: DESC)
    postsResolver: [Post!]!  @field(resolver: "App\\GraphQL\\Queries\\PostsResolver")
    post(id: ID @eq): Post @find
    postResolver(id: ID!): Post @field(resolver: "App\\GraphQL\\Queries\\PostResolver")
}

type Mutation {
    createPost(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @create
    createPostResolver(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @field(resolver: "App\\GraphQL\\Mutations\\CreatePostResolver")
    updatePost(
        id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @update
    deletePost(
        id: ID!
    ) : Post @delete
}

type User {
    id: ID!
    name: String!
    email: String!
    posts: [Post!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}
